name: Create a new release

on:
  workflow_dispatch:
    inputs:
      ref:
        description: Commit to release
        required: false

jobs:
  release:
    name: Draft Release
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.event.inputs.ref }}

    - name: Install GitVersion.Tool
      run: dotnet tool install --global GitVersion.Tool

    - name: Get current version
      id: get-version
      run: echo "::set-output name=version::$(dotnet-gitversion /nofetch /showvariable NuGetVersionV2)"

    - name: Scaffold release notes
      id: scaffold-release-notes
      run: |
        $lastTag = git describe --tags --abbrev=0
        $range = if ($lastTag -eq $null) { "HEAD" } else { "$lastTag..HEAD" }
        
        $releaseNotes = "```````nTODO: Review these release notes`n```````n"
        $commit = $null
        git rev-list $range --first-parent --reverse --pretty=tformat:%B |
            % {
                if ($_ -match "^commit (?<hash>[a-f0-9]+)$") {
                    if ($commit -ne $null) {
                        $releaseNotes += "`n- " + ([String]::Join("  `n  ", $commit))
                    }
                    $commit = @()
                } else {
                    if ($commit.Count -eq 0) {
                        $commit += "**$_**"
                    } else {
                        $commit += $_
                    }
                }
            }
        
        echo "::set-output name=releaseNotes::$($releaseNotes.Replace("%", '%25').Replace("`r", '%0D').Replace("`n", '%0A'))"
      shell: pwsh

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get-version.outputs.version }}
        release_name: Release ${{ steps.get-version.outputs.version }}
        body: ${{ steps.scaffold-release-notes.outputs.releaseNotes }}
        draft: true
        prerelease: false
